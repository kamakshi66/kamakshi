{
  "nbformat": 4,
  "nbformat_minor": 0,
  "metadata": {
    "colab": {
      "provenance": [],
      "authorship_tag": "ABX9TyPV/WCpEWdNRaKVipo7cqr4",
      "include_colab_link": true
    },
    "kernelspec": {
      "name": "python3",
      "display_name": "Python 3"
    },
    "language_info": {
      "name": "python"
    }
  },
  "cells": [
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "view-in-github",
        "colab_type": "text"
      },
      "source": [
        "<a href=\"https://colab.research.google.com/github/kamakshi66/kamakshi/blob/main/Untitled7.ipynb\" target=\"_parent\"><img src=\"https://colab.research.google.com/assets/colab-badge.svg\" alt=\"Open In Colab\"/></a>"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": 4,
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "2RDsyNgyF6tT",
        "outputId": "65be580b-2875-44b9-9cbe-93f076d35c87"
      },
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "output list using for loop: [2, 4, 6, 8, 10]\n",
            "output list using for loop [1, 3, 5, 7, 9]\n"
          ]
        }
      ],
      "source": [
        "input_list = [1,2,3,4,5,6,7,8,9,10]\n",
        "output_list = []\n",
        "odd_list = []\n",
        "for var in input_list:\n",
        "  if var% 2 ==0:\n",
        "    output_list.append(var)\n",
        "  else:\n",
        "    odd_list.append(var)\n",
        "print(\"output list using for loop:\",output_list)\n",
        "print(\"output list using for loop\",odd_list)\n"
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "input_list = [1,2,3,4,5,6,7]\n",
        "output_dict = {}\n",
        "for var in input_list:\n",
        "  if var % 2 != 0:\n",
        "     output_dict[var] = var**3\n",
        "print(\"output Dictionary using for loop:\",output_dict)"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "b7An0dwQLhei",
        "outputId": "f65309fb-4663-4f21-d9de-023d86ee2195"
      },
      "execution_count": 24,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "output Dictionary using for loop: {1: 1, 3: 27, 5: 125, 7: 343}\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "state =['gujarat', 'maharastra','rajasthan']\n",
        "captial =['gandhinagar', 'mumbai','jaipur']\n",
        "output_dict = {}\n",
        "for (key,value) in zip(state,captial):output_dict[key]=value\n",
        "print(\"output dictionary looping are\",output_dict)"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "AJTBuDpFRPeg",
        "outputId": "34995d2a-8717-44a1-a756-87ab84c99374"
      },
      "execution_count": 20,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "output dictionary looping are {'gujarat': 'gandhinagar', 'maharastra': 'mumbai', 'rajasthan': 'jaipur'}\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "state =['gujarat', 'maharastra','rajasthan']\n",
        "capital =['gandhinagar', 'mumbai','jaipur']\n",
        "dict_using_comp={key:value for (key,value) in zip(state,captial)}\n",
        "print(\"output dict looping\",dict_using_comp)\n",
        "\n",
        "\n"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "EaBIU7JSTRJT",
        "outputId": "4e303b3b-56aa-4cf7-d146-99b3dba583e3"
      },
      "execution_count": 37,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "output dict looping {'gujarat': 'gandhinagar', 'maharastra': 'mumbai', 'rajasthan': 'jaipur'}\n"
          ]
        }
      ]
    }
  ]
}
